class Solution {
public:
    int dp[101][101];
    bool check(int i,int j,int m,int n)
    {
        if(i>m||i<1||j>n||j<1)
            return false;
        return true;
    }
    long solve(int m,int n,int i,int j)
    {
        if(check(i,j,m,n)==false)
            return 0;
        if(dp[i][j]!=-1)
            return dp[i][j];
        if(i==m&&j==n)
        {
            return dp[i][j]=1;
        }
        dp[i][j]=(solve(m,n,i+1,j)+solve(m,n,i,j+1));
        return dp[i][j];
    }
    int uniquePaths(int m, int n) {
        memset(dp,-1,sizeof(dp));
        return solve(m,n,1,1);
    }
};
