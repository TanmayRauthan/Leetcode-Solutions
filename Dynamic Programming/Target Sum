class Solution {
public:
    int findTargetSumWays(vector<int>& v, int diff) {
        long long i,j,sum=0,n=v.size();
        for(i=0;i<n;i++)
            sum=sum+v[i];
        long long z=(diff+sum)/2;cout<<z;
        if((diff+sum)%2==1||abs(diff)>sum)
            return 0;
        vector<vector<int>> dp(n+1,vector<int>(z+1,0));
        for(i=0;i<=n;i++)
            dp[i][0]=1;
        for(i=1;i<=n;i++)
        {
            for(j=0;j<=z;j++)
            {
                if(v[i-1]<=j)
                    dp[i][j]=dp[i-1][j]+dp[i-1][j-v[i-1]];
                else
                    dp[i][j]=dp[i-1][j];
            }
        }
        return dp[n][z];
    }
};
