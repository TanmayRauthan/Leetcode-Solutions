class Solution {
public:
    int dp[1001][2];
    int solve(vector<int> a,vector<int> b,int preva,int prevb,int i,int n)
    {
        if(i==a.size())
            return 0;
        if(dp[i][n]!=-1)
            return dp[i][n];
        int ans=15000;
        if(a[i]>preva&&b[i]>prevb)
        {
            ans=solve(a,b,a[i],b[i],i+1,0);
        }
        //swap(a[i],b[i]);
        if(b[i]>preva&&a[i]>prevb)
        {
            ans=min(ans,1+solve(a,b,b[i],a[i],i+1,1));
        }
        //swap(a[i],b[i]);
        return dp[i][n]=ans;
    }
    int minSwap(vector<int>& a, vector<int>& b) {
        int n=a.size();
        memset(dp,-1,sizeof(dp));
        return solve(a,b,-1,-1,0,0);
    }
};
